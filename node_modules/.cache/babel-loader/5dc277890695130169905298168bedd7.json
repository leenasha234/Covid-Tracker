{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leenasha\\\\covid-tracker\\\\src\\\\Components\\\\Charts\\\\Charts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Charts = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this) : null;\n  console.log(confirmed, recovered, deaths);\n  const barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'people',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 6\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: country ? barChart : lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Charts, \"k/DxwZSu/1zHTtHlTKnhZOTCIIE=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/Leenasha/covid-tracker/src/Components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","console","log","barChart","value","legend","display","title","text","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AAEA,OAAOC,MAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAAP;AAAyCC,EAAAA;AAAzC,CAAD,KAAwD;AAAA;;AACpE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAOa,QAAQ,GAAG,YAAY;AAC5BD,MAAAA,YAAY,CAAE,MAAMX,cAAc,EAAtB,CAAZ;AAEJ,KAHE;;AAKHY,IAAAA,QAAQ;AAEP,GARS,CAAT;AASA,QAAMC,SAAS,GACdH,SAAS,CAACI,MAAV,gBAEE,QAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACNC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADF;AAENC,MAAAA,QAAQ,EAAE,CAAC;AACXb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAgBA,SAA9B,CADK;AAEXa,QAAAA,KAAK,EAAE,UAFI;AAGXC,QAAAA,WAAW,EAAC,SAHD;AAIXC,QAAAA,IAAI,EAAE;AAJK,OAAD,EAMX;AACChB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAET,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECY,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAC,KAHb;AAICE,QAAAA,eAAe,EAAE,sBAJlB;AAKCD,QAAAA,IAAI,EAAE;AALP,OANW;AAFJ;AADR;AAAA;AAAA;AAAA;AAAA,UAFF,GAoBM,IArBP;AAuBDE,EAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ,EAAsBE,SAAtB,EAAgCD,MAAhC;AACC,QAAMkB,QAAQ,GACdnB,SAAS,gBAEP,QAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACNS,MAAAA,MAAM,EAAC,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADD;AAENG,MAAAA,QAAQ,EAAE,CAAC;AACXC,QAAAA,KAAK,EAAE,QADI;AAEXG,QAAAA,eAAe,EAAC,CAChB,sBADgB,EAEhB,sBAFgB,EAGhB,sBAHgB,CAFL;AAQXjB,QAAAA,IAAI,EAAC,CAACC,SAAS,CAACoB,KAAX,EAAkBlB,SAAS,CAACkB,KAA5B,EAAmCnB,MAAM,CAACmB,KAA1C;AARM,OAAD;AAFJ,KADN;AAeA,IAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADA;AAERC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBrB,OAAQ;AAAnD;AAFC;AAfT;AAAA;AAAA;AAAA;AAAA,UAFO,GAuBH,IAxBN;AA0BA,sBACC;AAAK,IAAA,SAAS,EAAGN,MAAM,CAAC4B,SAAxB;AAAA,cACEtB,OAAO,GAAGgB,QAAH,GAAcZ;AADvB;AAAA;AAAA;AAAA;AAAA,UADD;AAKF,CAnED;;GAAMT,M;;KAAAA,M;AAoEN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2'; \r\n\r\nimport styles from'./Charts.module.css';\r\n\r\nconst Charts = ({ data:{ confirmed, deaths, recovered }, country }) => {\r\n   const [dailyData, setDailyData] = useState([]);\r\n\r\n   useEffect(() => {\r\n     const  fetchAPI = async () => {\r\n       setDailyData (await fetchDailyData());\r\n  \r\n  }\r\n  \r\n  fetchAPI();\r\n      \r\n  });\r\n   const lineChart = (\r\n    dailyData.length\r\n    ? (\r\n      <Line \r\n        data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [{\r\n        data: dailyData.map(({confirmed})=> confirmed),\r\n        label: 'Infected',\r\n        borderColor:'#3333ff',\r\n        fill: true,\r\n       },\r\n       {\r\n        data: dailyData.map(({ deaths }) => deaths),\r\n        label: 'Deaths',\r\n        borderColor:'red',\r\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n        fill: true,\r\n   \r\n    }], \r\n    }}\r\n    />) : null\r\n  );\r\n  console.log(confirmed,recovered,deaths);\r\n   const barChart = (\r\n   confirmed\r\n   ? (\r\n     <Bar\r\n     data={{\r\n     labels:['Infected', 'Recovered', 'Deaths'],\r\n     datasets: [{\r\n     label: 'people',\r\n     backgroundColor:[\r\n     'rgba(0, 0, 255, 0.5)',\r\n     'rgba(0, 255, 0, 0.5)',\r\n     'rgba(255, 0, 0, 0.5)',\r\n\r\n     ],\r\n     data:[confirmed.value, recovered.value, deaths.value]\r\n\t }]\r\n     \r\n\t }}\r\n     options={{\r\n      legend: { display: false },\r\n      title: { display: true, text: `Current state in ${country}`}\r\n\t }}\r\n\r\n     />\r\n     ) : null\r\n   ); \r\n   return (\r\n    <div className ={styles.container}>\r\n    { country ? barChart : lineChart }\r\n    </div>\r\n   )\r\n}\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}